@startuml

title Trackingbot Architecure

package bot{
    interface MessageBot{
        + apply(&mut self,cmds : Vec<Box<MessageCommand>>)
        + start(&mut self) : Result<JoinHandle,Error>
    }
    class TelegramBot
    
    class BotBuilder{
        + new() : BotBuilder
        + build(&self,config : AppConfig, type : BotType) : Result<Box<MessageBot>,Error>
    }
    
    enum BotType{
        + Telegram
    }
    
    package commands{
        interface MessageCommand{
            + exec_cmd(&self,args: Option<Vec<&str>>, chat: Option<&Chat>) : Result<String,CommandError>
            + exec_cmd_mut(&mut self, args: Option<Vec<&str>>,chat: Option<&Chat>) : Result<String,CommandError>
            + type(&self) : CommandType
            + need_mut(&self) : bool
        }
        class TrackingStateCommand
        class OrderDetailsCommand
        enum CommandType{
            + SingleCommand
            + ChatCommand
        }

        package services{
            interface TrackingStateService
            interface OrderDetailsService
            class OrderDetails
            class TrackingState
        }

        class Chat
        class Message

        enum CommandError{
            + IllegalArguments
            + NoArguments
            + InternalCommandError
            + IOError
        }
    }
}

    package config{
        class AppConfig
        class DatabaseConfig
        class ConfigLoader{
            + load() : Result<AppConfig,Error>
    }
}

BotBuilder --> BotType
BotBuilder --> AppConfig
BotBuilder --> MessageBot

Chat ---* Message

TelegramBot --|> MessageBot

MessageCommand --> Chat
MessageCommand --> CommandType
MessageCommand --> CommandError

TrackingStateService --> TrackingState
OrderDetailsService --> OrderDetails

TrackingStateCommand --|> MessageCommand
OrderDetailsCommand --|> MessageCommand
OrderDetailsCommand --> OrderDetailsService
TrackingStateCommand --> TrackingStateService
MessageBot --> MessageCommand

AppConfig --> DatabaseConfig
ConfigLoader --> AppConfig



@enduml
